version: 2.1

orbs:
  now:
    executors:
      default:
        docker:
          - image: circleci/node:lts
    commands:
      install:
        steps:
          - run:
              name: Install Now CLI
              command: |
                if [[ $(command -v now) == "" ]]; then
                  sudo npm install --global --unsafe-perm now@16.7.3
                else
                  echo "Now is already installed. No operation was performed."
                fi

defaults: &defaults
  docker:
    - image: circleci/node:12

aliases:
  - &docker-image
    docker:
      - image: circleci/node:10

  - &deploy
    run:
      name: Deploy
      command: yarn deploy

  - &deploy_production_filters
    filters:
      branches:
        only: master

  - &restore-build-flag
    restore_cache:
      keys:
        - build-flag-{{ checksum "package.json" }}

  - &test-build-flag
    run:
      name: Exit if build flag exists
      command: |
        FILE=build.flag
        if test -f "$FILE"; then
            echo "$FILE exist"
            circleci step halt
        fi
  - &generate-lock-file
    run:
      name: Generate lock file
      command: yarn generate-lock-entry >> yarn.lock

  - &restore-cache
    restore_cache:
      keys:
        - dependencies-cache-{{ checksum "yarn.lock" }}

  - &save-cache
    save_cache:
      paths:
        - node_modules
      key: dependencies-cache-{{ checksum "yarn.lock" }}

commands:
  save-build-flag:
    steps:
      - run:
          name: Create build flag
          command: touch build.flag
      - save_cache:
          paths:
            - build.flag
          key: build-flag-{{ checksum "package.json" }}

  node-build-steps:
    steps:
      - checkout:
          # Since our working_directory is deeper than the root,
          # remind the job where it needs to checkout.
          path: ~/skeleton-admin
      - *restore-build-flag
      - *test-build-flag
      # Services and packages in a Workspace don't get their own
      # yarn.lock so we need to generate them manually.
      - *generate-lock-file
      - *restore-cache
      - run:
          name: install & test
          command: |
            yarn install
            yarn test:all
      - *save-cache
      - save-build-flag

jobs:
  - build-react-app:
      <<: *defaults
      steps:
        - node-build-steps

workflows:
  version: 2
  install-and-test:
    jobs:
      - build-react-app
